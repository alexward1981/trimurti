var fs = require('fs');
var chalk = require('chalk');
var axios = require('axios');
var GenerateSchema = require('generate-schema');

var exports = module.exports = {}
  exports.getJson = function(route) {
    var t = this;
    // Retrieves a usable json feed from an API (specified in answers array)
    var getURL = route ? t.answers.API+'/'+route : t.answers.API;
    return axios.get(getURL)
      .then(function(response) {
        console.log(chalk.green('✔ Json feed found at', t.answers.API+'/'+route, 'processing...'));
        t.processJson(response, route);
      });
  }

  exports.getRoutes = function() {
    var route = this.answers.Routes.split(',');
    if(route.length !== 0) {
      for (var i = 0; i < route.length; i++) {
        console.log(chalk.gray('Please wait, processing', route[i], 'route ...'));
        this.getJson(route[i]);
      }
    } else {
      this.getJson();
    }
    // TODO: This should not happen until after the loop has finished it's run
    // Send the results to WriteConfig.js
  }

  exports.processJson = function(feed, route) {
    // Processes each route and outputs a schema file for each route
    var schema = GenerateSchema.json(route, feed);
    return this.createSchema(schema, route);
  }

  exports.createSchema = function(schema, route) {
    // Takes the schema generated by 'processJson()' and writes it to to a file
    fs.writeFile('./trimurti/core/routes/'+route+'.json', JSON.stringify(schema, null, 4), 'utf8', function (err) {
      if (err) { return console.log(err); }
    });
    return console.log(chalk.green('✔ Processing of' ,route, 'complete'));
  }

  exports.init = function(answers) {
    this.answers = answers;
    //this.getJson('https://jsonplaceholder.typicode.com/posts')
    this.getRoutes();
  }
